// async function getData(url) {

// }

document.addEventListener('DOMContentLoaded', function () {
  // Init leaflet map
  const map = L.map('map');
  const addSpotSidebar = document.querySelector('.add-spot');

  // Tile layer
  L.tileLayer(
    'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}',
    {
      attribution:
        'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
      maxZoom: 18,
      id: 'mapbox/streets-v11',
      tileSize: 512,
      zoomOffset: -1,
      accessToken:
        'pk.eyJ1IjoibWFrMDE3IiwiYSI6ImNrZXB1ZjlicTFoNmsydm84a3YybTczczkifQ.Tk6EsX0mlVOljcEYD-HXMw',
    },
  ).addTo(map);

  // Change position of zoom control
  map.zoomControl.setPosition('bottomleft');

  // Get location by IP
  fetch('https://ipinfo.io/json?token=c97eec3767f442')
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      const { loc } = data;
      const location = loc.split(',').map((item) => +item);
      map.setView(location, 13);
    });

  const newMarkerIcon = L.icon({
    iconUrl: '../images/compressed/new-marker.min.svg',
    iconSize: [40, 40],
    iconAnchor: [20, 40],
    shadowUrl: '../images/compressed/new-marker-shadow.min.svg',
    shadowSize: [46, 46],
    shadowAnchor: [23, 43],
  });

  document.querySelector('.addSpot').addEventListener('click', function () {
    const center = map.getCenter();
    const newMarker = L.marker(center, { draggable: true, icon: newMarkerIcon }).addTo(map);
    newMarker.addEventListener('moveend', function () {
      if (!addSpotSidebar.classList.contains('visible')) {
        addSpotSidebar.classList.add('visible');
      }
    });
  });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJtYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFzeW5jIGZ1bmN0aW9uIGdldERhdGEodXJsKSB7XHJcblxyXG4vLyB9XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xyXG4gIC8vIEluaXQgbGVhZmxldCBtYXBcclxuICBjb25zdCBtYXAgPSBMLm1hcCgnbWFwJyk7XHJcbiAgY29uc3QgYWRkU3BvdFNpZGViYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLXNwb3QnKTtcclxuXHJcbiAgLy8gVGlsZSBsYXllclxyXG4gIEwudGlsZUxheWVyKFxyXG4gICAgJ2h0dHBzOi8vYXBpLm1hcGJveC5jb20vc3R5bGVzL3YxL3tpZH0vdGlsZXMve3p9L3t4fS97eX0/YWNjZXNzX3Rva2VuPXthY2Nlc3NUb2tlbn0nLFxyXG4gICAge1xyXG4gICAgICBhdHRyaWJ1dGlvbjpcclxuICAgICAgICAnTWFwIGRhdGEgJmNvcHk7IDxhIGhyZWY9XCJodHRwczovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9cIj5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMsIDxhIGhyZWY9XCJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wL1wiPkNDLUJZLVNBPC9hPiwgSW1hZ2VyeSDCqSA8YSBocmVmPVwiaHR0cHM6Ly93d3cubWFwYm94LmNvbS9cIj5NYXBib3g8L2E+JyxcclxuICAgICAgbWF4Wm9vbTogMTgsXHJcbiAgICAgIGlkOiAnbWFwYm94L3N0cmVldHMtdjExJyxcclxuICAgICAgdGlsZVNpemU6IDUxMixcclxuICAgICAgem9vbU9mZnNldDogLTEsXHJcbiAgICAgIGFjY2Vzc1Rva2VuOlxyXG4gICAgICAgICdway5leUoxSWpvaWJXRnJNREUzSWl3aVlTSTZJbU5yWlhCMVpqbGljVEZvTm1zeWRtODRhM1l5YlRjemN6a2lmUS5UazZFc1gwbWxWT2xqY0VZRC1IWE13JyxcclxuICAgIH0sXHJcbiAgKS5hZGRUbyhtYXApO1xyXG5cclxuICAvLyBDaGFuZ2UgcG9zaXRpb24gb2Ygem9vbSBjb250cm9sXHJcbiAgbWFwLnpvb21Db250cm9sLnNldFBvc2l0aW9uKCdib3R0b21sZWZ0Jyk7XHJcblxyXG4gIC8vIEdldCBsb2NhdGlvbiBieSBJUFxyXG4gIGZldGNoKCdodHRwczovL2lwaW5mby5pby9qc29uP3Rva2VuPWM5N2VlYzM3NjdmNDQyJylcclxuICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IHsgbG9jIH0gPSBkYXRhO1xyXG4gICAgICBjb25zdCBsb2NhdGlvbiA9IGxvYy5zcGxpdCgnLCcpLm1hcCgoaXRlbSkgPT4gK2l0ZW0pO1xyXG4gICAgICBtYXAuc2V0Vmlldyhsb2NhdGlvbiwgMTMpO1xyXG4gICAgfSk7XHJcblxyXG4gIGNvbnN0IG5ld01hcmtlckljb24gPSBMLmljb24oe1xyXG4gICAgaWNvblVybDogJy4uL2ltYWdlcy9jb21wcmVzc2VkL25ldy1tYXJrZXIubWluLnN2ZycsXHJcbiAgICBpY29uU2l6ZTogWzQwLCA0MF0sXHJcbiAgICBpY29uQW5jaG9yOiBbMjAsIDQwXSxcclxuICAgIHNoYWRvd1VybDogJy4uL2ltYWdlcy9jb21wcmVzc2VkL25ldy1tYXJrZXItc2hhZG93Lm1pbi5zdmcnLFxyXG4gICAgc2hhZG93U2l6ZTogWzQ2LCA0Nl0sXHJcbiAgICBzaGFkb3dBbmNob3I6IFsyMywgNDNdLFxyXG4gIH0pO1xyXG5cclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkU3BvdCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3QgY2VudGVyID0gbWFwLmdldENlbnRlcigpO1xyXG4gICAgY29uc3QgbmV3TWFya2VyID0gTC5tYXJrZXIoY2VudGVyLCB7IGRyYWdnYWJsZTogdHJ1ZSwgaWNvbjogbmV3TWFya2VySWNvbiB9KS5hZGRUbyhtYXApO1xyXG4gICAgbmV3TWFya2VyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdmVlbmQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmICghYWRkU3BvdFNpZGViYXIuY2xhc3NMaXN0LmNvbnRhaW5zKCd2aXNpYmxlJykpIHtcclxuICAgICAgICBhZGRTcG90U2lkZWJhci5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sImZpbGUiOiJtYWluLmpzIn0=
