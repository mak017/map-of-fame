// Based on [Eric Meyer's reset 2.0](http://meyerweb.com/eric/tools/css/reset/index.html)
// Global reset rules.
// For more specific resets, use the reset mixins provided below
@function elements-of-type($type) {
  @if ($type == block) {
    @return address, article, aside, blockquote, center, dir, div, dd, details, dl, dt, fieldset,
    figcaption, figure, form, footer, frameset, h1, h2, h3, h4, h5, h6, hr, header, hgroup,
    isindex, main, menu, nav, noframes, noscript, ol, p, pre, section, summary, ul;
  }

  @else if ($type == inline) {
    @return a, abbr, acronym, audio, b, basefont, bdo, big, br, canvas, cite, code, command,
    datalist, dfn, em, embed, font, i, img, input, keygen, kbd, label, mark, meter, output,
    progress, q, rp, rt, ruby, s, samp, select, small, span, strike, strong, sub, sup, textarea,
    time, tt, u, var, video, wbr;
  }

  @else if ($type == inline-block) {
    @return img;
  }

  @else if ($type == table) {
    @return table;
  }

  @else if ($type == list-item) {
    @return li;
  }

  @else if ($type == table-row-group) {
    @return tbody;
  }

  @else if ($type == table-header-group) {
    @return thead;
  }

  @else if ($type == table-footer-group) {
    @return tfoot;
  }

  @else if ($type == table-row) {
    @return tr;
  }

  @else if ($type == table-cell) {
    @return th, td;
  }

  @else if ($type == html5-block) {
    @return article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav,
    section, summary;
  }

  @else if ($type == html5-inline) {
    @return audio, canvas, command, datalist, embed, keygen, mark, meter, output, progress, rp, rt,
    ruby, time, video, wbr;
  }

  @else if ($type == html5) {
    @return article, aside, audio, canvas, command, datalist, details, embed, figcaption, figure,
    footer, header, hgroup, keygen, main, mark, menu, meter, nav, output, progress, rp, rt, ruby,
    section, summary, time, video, wbr;
  }

  @else if ($type == text-input) {
    @return input, textarea;
  }
}
@mixin global-reset {
  @include reset-html5;

  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    @include reset-box-model;

@include reset-font;
  }

  // Unlike Eric's original reset, we reset the html element to be compatible
  // with the vertical rhythm mixins.
  html {
    @include reset-body;
  }

  ol, ul {
    @include reset-list-style;
  }

  table {
    @include reset-table;
  }

  caption, th, td {
    @include reset-table-cell;
  }

  q, blockquote {
    @include reset-quotation;
  }

  a img {
    @include reset-image-anchor-border;
  }
}

// Reset all elements within some selector scope. To reset the selector itself,
// mixin the appropriate reset mixin for that element type as well. This could be
// useful if you want to style a part of your page in a dramatically different way.
@mixin nested-reset {
  div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    @include reset-box-model;

@include reset-font;
  }

  table {
    @include reset-table;
  }

  caption, th, td {
    @include reset-table-cell;
  }

  q, blockquote {
    @include reset-quotation;
  }

  a img {
    @include reset-image-anchor-border;
  }
}

// Reset the box model measurements.
@mixin reset-box-model {
  margin: 0;
  padding: 0;
  border: 0;
}

// Reset the font and vertical alignment.
@mixin reset-font {
  vertical-align: baseline;
  font: inherit;
  font-size: 100%;
}

// Resets the outline when focus.
// For accessibility you need to apply some styling in its place.
@mixin reset-focus {
  outline: 0;
}

// Reset a body element.
@mixin reset-body {
  line-height: 1;
}

// Reset the list style of an element.
@mixin reset-list-style {
  list-style: none;
}

// Reset a table
@mixin reset-table {
  border-spacing: 0;
  border-collapse: collapse;
}

// Reset a table cell (`th`, `td`)
@mixin reset-table-cell {
  vertical-align: middle;
  font-weight: normal;
  text-align: left;
}

// Reset a quotation (`q`, `blockquote`)
@mixin reset-quotation {
  quotes: none;

  &:before, &:after {
    content: "";
    content: none;
  }
}

// Resets the border.
@mixin reset-image-anchor-border {
  border: none;
}

// Unrecognized elements are displayed inline.
// This reset provides a basic reset for block html5 elements
// so they are rendered correctly in browsers that don't recognize them
// and reset in browsers that have default styles for them.
@mixin reset-html5 {
  #{elements-of-type(html5-block)} {
    display: block;
  }
}

// Resets the display of inline and block elements to their default display
// according to their tag type. Elements that have a default display that varies across
// versions of html or browser are not handled here, but this covers the 90% use case.
// Usage Example:
//
//     // Turn off the display for both of these classes
//     .unregistered-only, .registered-only
//       display: none
//     // Now turn only one of them back on depending on some other context.
//     body.registered
//       +reset-display(".registered-only")
//     body.unregistered
//       +reset-display(".unregistered-only")
@mixin reset-display($selector: "", $important: false) {
  #{append-selector(elements-of-type("inline"), $selector)} {
    @if $important {
      display: inline !important;
    } @else {
      display: inline;
    }
  }

  #{append-selector(elements-of-type("block"), $selector)} {
    @if $important {
      display: block !important;
    } @else {
      display: block;
    }
  }
}

// Modern CSS reset - https://github.com/hankchizljaw/modern-css-reset/
/* Box sizing rules */
*, *::before, *::after {
  box-sizing: border-box;
}

/* Remove default padding */
ul[class], ol[class] {
  padding: 0;
}

/* Remove default margin */
body, h1, h2, h3, h4, p, ul[class], ol[class], figure, blockquote, dl, dd {
  margin: 0;
}

/* Set core root defaults */
html {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  text-rendering: optimizeSpeed;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul[class], ol[class] {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img, picture {
  display: block;
  max-width: 100%;
}

/* Natural flow and rhythm in articles by default */
article >* +* {
  margin-top: 1em;
}

/* Inherit fonts for inputs and buttons */
input, button, textarea, select {
  font: inherit;
}

/* Blur images when they have no alt attribute */
img:not([alt]) {
  filter: blur(10px);
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  * {
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;

    scroll-behavior: auto !important;
  }
}
