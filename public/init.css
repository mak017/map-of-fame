*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figure,h1,h2,h3,h4,ol[class],p,ul[class]{margin:0}html{scroll-behavior:smooth}body{min-height:100vh;line-height:1.5;text-rendering:optimizeSpeed}ol[class],ul[class]{list-style:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img,picture{display:block;max-width:100%}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}img:not([alt]){-webkit-filter:blur(10px);filter:blur(10px)}:root{--color-accent:#650d97;--color-dark:#393940;--color-light:#fff}.map-marker-with-photo{border:4px solid #fff;border:4px solid var(--color-light);border-radius:50%}.map-marker-with-photo.active{border-color:rgba(#650d97,.43);border-color:rgba(var(--color-accent),.43);-webkit-box-shadow:0 8px 8px #650d97;box-shadow:0 8px 8px #650d97;-webkit-box-shadow:0 8px 8px var(--color-accent);box-shadow:0 8px 8px var(--color-accent)}.map-marker-cluster{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border:4px solid #fff;border:4px solid var(--color-light);border-radius:50%;opacity:.6;background:#650d97;background:var(--color-accent);color:#fff;color:var(--color-light);font-size:18px;font-weight:800}.leaflet-touch .leaflet-control-zoom{margin-bottom:18px;margin-left:18px;border:0}.leaflet-touch .leaflet-control-zoom>a{width:40px;height:40px;border:0;font-size:0}.leaflet-touch .leaflet-control-zoom>a:hover{border:0}.leaflet-touch .leaflet-control-zoom-in{background:#fff url(../images/plus.svg) 50% 50%/18px 18px no-repeat;background:var(--color-light) url(../images/plus.svg) 50% 50%/18px 18px no-repeat}.leaflet-touch .leaflet-control-zoom-out{background:#fff url(../images/minus.svg) 50% 50%/18px 3.5px no-repeat;background:var(--color-light) url(../images/minus.svg) 50% 50%/18px 3.5px no-repeat}body{overflow:hidden;font-family:Montserrat,sans-serif;font-size:16px}.button{border:0;border-radius:2px;cursor:pointer}.button:disabled{pointer-events:none}.main-top_left_wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;top:16px;left:18px}.main-top_right_wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;top:16px;right:18px}.mode-switcher{position:absolute;right:10px;bottom:60px}.add-spot{position:absolute;top:0;right:0;bottom:0;width:150px;background-color:#fff;background-color:var(--color-light)}@media (max-width:767px){.leaflet-container .leaflet-control-attribution{font-size:5px}}@media (prefers-reduced-motion:reduce){*{-webkit-transition-duration:0s!important;transition-duration:0s!important;-webkit-animation-duration:0s!important;animation-duration:0s!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;scroll-behavior:auto!important}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
